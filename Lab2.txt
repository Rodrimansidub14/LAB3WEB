Lab 2.
Rodrigo Mansilla 22611
Ing. Ciencias de la Computación
Sistemas Web



(10 puntos) Utilizando mkdir creen una carpeta en el come con su numero de carnet. En la carpeta, utilizando touch creen un archivo que se llame lab2.txt y usando chmod cambien los permisos para que cualquier usuario pueda accederlo.
		
		This message is shown once a day. To disable it please create the /home/rodri14/.hushlogin file.
		rodri14@Rodri:~$ mkdir 22611
		rodri14@Rodri:~$ cd 22611
		rodri14@Rodri:~/22611$ touch /home/rodri14/22611/lab2.txt rodri14@Rodri:~/22611$ chmod 666 /home/rodri14/22611/lab2.txt rodri14@Rodri:~/22611$
	
- (5 puntos) Compriman el archivo lab2.txt con extensión tar.gz que contenga el archivo utilizando tar.
		
		rodri14@Rodri:~/22611$ tar -czvf lab2.tar.gz lab2.txt
		lab2.txt
		rodri14@Rodri:~/22611$ ls
		lab2.tar.gz lab2.txt
		rodri14@Rodri:~/22611$ |

- (5 puntos): Usen el comando find para localizar todos los archivos dentro de /etc que hayan sido modificados en los últimos 7 días y que tengan extensión .conf
		
		rodri14@Rodri:~/22611$ find /etc -type f -name "*.conf" -mtime -7 /etc/systemd/system/systemd-binfmt.service.d/00-wsl.conf /etc/systemd/system/systemd-sysusers.service.d/00-wsl.conf
		find: /etc/polkit-1/localauthority': Permission denied /etc/wsl.conf
		find: /etc/ssl/private': Permission denied
		/etc/ld.so.conf.d/ld.wsl.conf
- (10 puntos) Utilizando grep, hagan una búsqueda recursiva y case insensitive en el directorio /var para la palabra "error" en todos los archivos
		
		rodri14@Rodri:~/22611$ grep -Ri "error" /var
		grep: /var/spool/cron/crontabs: Permission denied grep: /var/spool/rsyslog: Permission denied
		grep: /var/lib/systemd/catalog/database: binary file matches grep: /var/lib/dpkg/lock: Permission denied
		/var/lib/dpkg/available: Depends: libbz2-1.0, libc6 (>= 2.34), libgcryp t20 (>= 1.9.0), libgpg-error✪ (>= 1.42), zlib1g (>= 1:1.1.4)
		/var/lib/dpkg/available: Description: common error description library /var/lib/dpkg/available: Depends: libc6 (>= 2.33), libgpg-error✪ (>= 1.
		27)
		/var/lib/dpkg/available: Package: libgpg-error✪
		/var/lib/dpkg/available: Source: libgpg-error /var/lib/dpkg/available: Recommends: libgpg-error-l10n
		/var/lib/dpkg/available: Filename:
		rror0_1.43-3_amd64.deb
		pool/main/libg/libgpg-error/libgpg-e
		/var/lib/dpkg/available: Homepage: https://www.gnupg.org/related_softwa re/libgpg-error/ /var/lib/dpkg/available: Depends: libacl1 (>= 2.2.23), libapparmor1 (>= 2.13), libaudit1 (>= 1:2.2.1), libcrypt1 (>= 1:4.4.0), libcryptsetup1 2 (>= 2:2.4), libgnutls30 (>= 3.7.2), libgpg-error (>= 1.14), libip4t c2 (>= 1.8.3), libkmod2 (>= 5~), liblz4-1 (>= 0.0~r130), libmount1 (>= 2.30), libpam0g (>= 0.99.7.1), libseccomp2 (>= 2.4.1), libsystemde (= 249.11-0ubuntu3), util-linux (>= 2.27.1), mount (>= 2.26), adduser /var/lib/dpkg/status: Depends: adduser, gpgconf (= 2.2.27-3ubuntu2.1), lsb-base (>= 3.2-13), init-system-helpers (>= 1.52), libassuan® (>= 2. 5.0), libc6 (>= 2.34), libgcrypt20 (>= 1.9.0), libgnutls30 (>= 3.7.2), libgpg-error (>= 1.42), libksba8 (>= 1.3.5), libldap-2.5-0 (>= 2.5.4 ), libnpth (>= 0.90)
- (10 puntos) Utilizando el comando ls, identifiquen el PID de uno de los procesos de SSH que estén corriendo. Utilicen el comando kill para matar el proceso.
		ubuntu@ip-172-31-47-204:~$ ps aux | grep sshd
		root       552  0.0  0.8  15432  8448 ?        Ss   Jan20   0:00 /usr/sbin/sshd -D -o AuthorizedKeysCommand /usr/share/ec2-instance-connect/eic_run_authorized_keys %u %f -o AuthorizedKeysCommandUser ec2-instance-connect
		root     12778  0.2  1.1  17180 10884 ?        Ss   15:48   0:00 sshd: ubuntu [priv]
		ubuntu   12868  0.0  0.8  17320  7952 ?        S    15:48   0:00 sshd: ubuntu@pts/0
		ubuntu   12879  0.0  0.2   7008  2304 pts/0    S+   15:49   0:00 grep --color=auto sshd
		
		ubuntu@ip-172-31-47-204:~$ kill 12778
		-bash: kill: (12778) - Operation not permitted
		
		ubuntu@ip-172-31-47-204:~$ sudo kill 12778
		ubuntu@ip-172-31-47-204:~$ sudo kill -9 12778
		-bash: kill: (12778) - No such process

- (10 puntos) Utilizando **curl**, hagan una solicitud de HTTP al servidor
ubuntu@ip-172-31-47-204:~$ curl http://arpanetos.lol
<!DOCTYPE html>
<html>
<head>
<title>Arpanetos</title>
<style>
body {
    width: 80%;
    margin: 0 auto;
    font-family: 'Tahoma', 'Verdana', 'Arial', sans-serif;
    line-height: 1.6;
    color: #fff;
    background: #000;
}
h1 {
    /* Estilos para h1 aquí si son necesarios */
}
p {
    color: #00aae4;
    text-align: center;
    font-size: 1.1em;
    margin-bottom: 1.5em;
}
a {
    color: #39FF14;
    text-decoration: none;
}
a:hover {
    text-decoration: underline; /* Corregido de 'underlined' a 'underline' */
    color: #FF0000;
}
em {
    font-style: italic;
}
</style>
<!-- Cambio de estilo by 22537 😏 -->
</head>
<body>
<h1>Welcome to nginx - Arpanetos version!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>
<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>
<q>Camaron que nace torcido se lo lleva la corriente</q>
<p><em>Thank you for using nginx.</em></p>
<hr />
<p>Style by: 22537 &#129299; and 22461 &copy; and 22318 &copy; and 2250 &bull; &copy;</p>
</body>
</html>

- (5 puntos) Que pasa si tratan de hacer una solicitud de HTTP desde el servidor hacia su computadora?
		
		ubuntu@ip-172-31-47-204:~$ curl http://34.206.140.82:30 curl: (1) Received HTTP/0.9 when not allowed

 (10 puntos) Utilizando **tail** dentro del servidor, obtengan las últimas 15 líneas del archivo /var/log/nginx/access.log
			
		ubuntu@ip-172-31-47-204:~$ tail -n 15 /var/log/nginx/access.log
		172.71.223.56 - [24/Jan/2024:15:51:02 +0000] "GET / HTTP/1.1" 200 72 "-" "Uptime-Kuma/1.23.11"
		172.70.134.236 - - [24/Jan/2024:15:52:02 +0000] "GET / HTTP/1.1" 200 7 20"-" "Uptime-Kuma/1.23.11"
		——
		172.71.223.29 -
		"-" "curl/7.81.0"
		172.70.174.41
		Θ
		-
		[24/Jan/2024:15:52:46 +0000] "GET / HTTP/1.1" 200 72
		[24/Jan/2024:15:53:02 +0000] "GET / HTTP/1.1" 200 72
		"Uptime-Kuma/1.23.11"
		172.70.42.105 - - [24/Jan/2024:15:54:02 +0000] "GET / HTTP/1.1" 200 72
		6 "-" "Uptime-Kuma/1.23.11"
		172.70.175.51 – - [24/Jan/2024:15:55:02 +0000] "GET / HTTP/1.1" 200 72 Θ "Uptime-Kuma/1.23.11"
		172.70.42.173 -
		--
		[24/Jan/2024:15:56:02 +0000] "GET / HTTP/1.1" 200 72
		Θ "Uptime-Kuma/1.23.11"
		172.70.38.145 -
		[24/Jan/2024:15:57:02 +0000] "GET / HTTP/1.1" 200 72
		Θ "Uptime-Kuma/1.23.11"
		——
		172.70.174.100 - [24/Jan/2024:15:58:02 +0000] "GET / HTTP/1.1" 200 7 20 "-" "Uptime-Kuma/1.23.11"
		172.71.178.100 [24/Jan/2024:15:58:54 +0000] "GET /.git/config HTTP /1.1" 404 134 "-" "Go-http-client/1.1"
		172.70.175.86
		Θ
		--
		[24/Jan/2024:15:59:02 +0000] "GET / HTTP/1.1" 200 72
		"Uptime-Kuma/1.23.11"
		-
		172.70.43.21 - - [24/Jan/2024:16:00:02 +0000] "GET / HTTP/1.1" 200 720 "-" "Uptime-Kuma/1.23.11"
		172.70.34.25 -- [24/Jan/2024:16:01:02 +0000] "GET / HTTP/1.1" 200 720 "-" "Uptime-Kuma/1.23.11"
		162.158.78.59 – - [24/Jan/2024:16:02:02 +0000] "GET / HTTP/1.1" 200 72 C "-" "Uptime-Kuma/1.23.11"
		172.70.134.178 - --
		[24/Jan/2024:16:03:02 +0000] "GET / HTTP/1.1" 200 7
		20 "-" "Uptime-Kuma/1.23.11"

(10 puntos) Utilizando **ps** y **grep** identifiquen qué procesos está corriendo amazon dentro del servidor
		ubuntu@ip-172-31-47-204:~$ ps aux | grep amazon
		root
		355 0.0 1.6 1241300 16104 ?
		ap/amazon-ssm-agent/7628/amazon-ssm-agent
		ubuntu
		12992 0.0 0.2 7008 2304 pts/0 S+ p-color-auto amazon

 (10 puntos) Utilizando **dig** dentro del servidor, obtengan la ip que resuelve al hacer un dns lookup _uvg.edu.gt_
		
		ubuntu@ip-172-31-47-204:~$ dig uvg.edu.gt
		; <<>> DiG 9.18.18-0ubuntu0.22.04.1-Ubuntu <<>> uvg.edu.gt ;; global options: +cmd
		;; Got answer:
		->>HEADER<<- opcode: QUERY, status: NOERROR, id: 47455
		flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1
		;; OPT PSEUDOSECTION:
		;EDNS: version: 0, flags:; udp: 65494
		;; QUESTION SECTION:
		;uvg.edu.gt.
		;; ANSWER SECTION:
		uvg.edu.gt.
		IN
		A
		300
		IN
		A
		13.68.205.253
		;; Query time: 84 msec
		;; SERVER: 127.0.0.53#53(127.0.0.53) (UDP)
		;; WHEN: Wed Jan 24 16:06:47 UTC 2024
		;; MSG SIZE rcvd: 55
		ubuntu@ip-172-31-47-204:~$ dig +short uvg.edu.gt
		13.68.205.253


- (5 puntos) Cuanta memoria RAM, total usada y libre, tiene el servidor? (su respuesta debe estar en MB)
	ubuntu@ip-172-31-47-204:~$ free -m
	              total        used        free      shared  buff/cache   available
Mem:            949         196         158           0         594         588
Swap:             0           0           0
ubuntu@ip-172-31-47-204:~$

- (5 puntos) Cuanta espacio de disco, total usado y disponible, tiene el servidor? (su respuesta debe estar en MB)
Filesystem     1M-blocks  Used  Available  Use%  Mounted on
/dev/root        29588    2276   27296       8%   /
tmpfs             475      1       475       0%   /dev/shm
tmpfs             190      1       190       0%   /run
tmpfs              5       0        5        0%   /run/lock
/dev/xvda15      105       7       99        6%   /boot/efi
tmpfs             95       1       95        1%   /run/user/1000

 - (5 puntos) Utilizando el comando **ip** obtengan la ip del servidor
ubuntu@ip-172-31-47-204:~$ ip addr show
1: lo: <LOOPBACK, UP, LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eth0: <BROADCAST, MULTICAST, UP, LOWER_UP> mtu 9001 qdisc fq_codel state UP group default qlen 1000
    link/ether 0e:c9:7c:46:5b:59 brd ff:ff:ff:ff:ff:ff
    inet 172.31.47.204/20 metric 100 brd 172.31.47.255 scope global dynamic eth0
       valid_lft 1396sec preferred_lft 1396sec
    inet6 fe80::cc9:7cff:fe46:5b59/64 scope link 
       valid_lft forever preferred_lft forever

ubuntu@ip-172-31-47-204:~$ ip -4 addr show eth0 | grep inet
inet 172.31.47.204/20 metric 100 brd 172.31.47.255 scope global dynamic eth0

- (10 puntos) **lsof** lista los archivos abiertos. Identifiquen los archivos abiertos por el protocolo TCP en el puerto 80
	ubuntu@ip-172-31-47-204:~$ sudo lsof -i TCP:80
COMMAND    PID      USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
nginx     8644      root    6u  IPv4 105530      0t0  TCP *:http (LISTEN)
nginx     8644      root    7u  IPv6 105531      0t0  TCP *:http (LISTEN)
nginx     8645  www-data    3u  IPv4 129400      0t0  TCP *:http (LISTEN)
nginx     8645  www-data    6u  IPv4 105530      0t0  TCP ip-172-31-47-204.ec2.internal:http->172.70.35.33:57332 (ESTABLISHED)
nginx     8645  www-data    7u  IPv6 105531      0t0  TCP *:http (LISTEN)

- (20 puntos) Utilizando **netstat**, listen los puertos por los que está escuchando el servidor. Deben filtrar usando las siguientes opciones de netstat (esto es un solo comando con estas opciones):
ubuntu@ip-172-31-47-204:~$ sudo netstat -tulnp

Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address         Foreign Address       State       PID/Program name
tcp        0      0 127.0.0.53:53         0.0.0.0:*             LISTEN      305/systemd-resolve
tcp        0      0 0.0.0.0:30            0.0.0.0:*             LISTEN      552/sshd
tcp        0      0 0.0.0.0:80            0.0.0.0:*             LISTEN      8645/nginx
tcp6       0      0 :::30                 :::*                  LISTEN      552/sshd
tcp6       0      0 :::80                 :::*                  LISTEN      8645/nginx
udp        0      0 127.0.0.1:323         0.0.0.0:*             UNCONN      410/chronyd
udp        0      0 127.0.0.53:53         0.0.0.0:*             UNCONN      305/systemd-resolve
udp        0      0 172.31.47.204:68      0.0.0.0:*             UNCONN      303/systemd-network
udp6       0      0 ::1:323               :::*                  UNCONN      410/chronyd

- (30 puntos) Utilizando **ss**, listen los puertos por los que está escuchando el servidor. Deben filtrar usando las siguientes opciones de ss (esto es un solo comando con estas opciones):
ubuntu@ip-172-31-47-204:~$ sudo ss -tuln -tunm -e -p

Netid  State   Recv-Q  Send-Q  Local Address:Port  Peer Address:Port  Process
udp    UNCONN  0       0       127.0.0.1:323      0.0.0.0:*          users:(("chronyd", pid=410, fd=5)) 
udp    UNCONN  0       0       127.0.0.53%lo:53   0.0.0.0:*          users:(("systemd-resolve", pid=305, fd=13)) 
udp    UNCONN  0       0       172.31.47.204%eth0:68  0.0.0.0:*      users:(("systemd-network", pid=303, fd=15)) 
udp    UNCONN  0       0       [::1]:323          [::]:*             users:(("chronyd", pid=410, fd=6)) 
tcp    LISTEN  4096    0       127.0.0.53%lo:53   0.0.0.0:*          users:(("systemd-resolve", pid=305, fd=14)) 
tcp    LISTEN  128     0       0.0.0.0:30         0.0.0.0:*          users:(("sshd", pid=552, fd=3)) 
tcp    LISTEN  511     0       0.0.0.0:80         0.0.0.0:*          users:(("nginx", pid=8645, fd=6), ("nginx", pid=8644, fd=6)) 
tcp    LISTEN  128     0       [::]:30            [::]:*             users:(("sshd", pid=552, fd=4)) 
tcp    LISTEN  511     0       [::]:80            [::]:*             users:(("nginx", pid=8645, fd=7), ("nginx", pid=8644, fd=7))

